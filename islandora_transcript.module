<?php

/**
 * @file
 * Defines all the hooks this module implements.
 */

/**
 * Implements hook_menu().
 */
function islandora_transcript_menu() {
  return array(
    'islandora/object/%islandora_object/transcript' => array(
      'title' => 'Transcript',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_transcript_view_form',2),
      'access callback' => 'islandora_transcript_view_access',
      'access arguments' => array(2),
      'file' => 'includes/utilities.inc',
    ),
    'islandora/object/%islandora_object/TRANSCRIPT-edit' => array(
      'title' => 'Edit Transcipt',
      'type' => MENU_LOCAL_TASK,
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_transcript_edit_transcript_form', 2),
      'access callback' => 'islandora_transcript_edit_access',
      'access arguments' => array(2),
      'file' => 'includes/utilities.inc',
    ),
  );
}

/**
 * Access callback.
 *
 * Allows Objects with datastream names that starts with 'TRANSCRIPT'.
 *
 * @param AbstractObject $object
 *   The object to test, if NULL the given object doesn't exist or is
 *   inaccessible.
 *
 * @return bool
 *   TRUE if the user is allowed to access the transcript interface, FALSE
 *   otherwise.
 */
function islandora_transcript_view_access(AbstractObject $object) {
  $access = FALSE;
  if (is_object($object)) {

    foreach ($object as $ds => $value) {
      if (strpos($ds,'TRANSCRIPT') === 0) {
        $access = $access || islandora_datastream_access(ISLANDORA_VIEW_OBJECTS, $object[$ds]);
      }
    }
  }
  // Note: this is access to the tab. Individual DS access will be checked in
  // the controller too.
  return $access;
}

/**
 * Access callback.
 *
 * Allows Objects with datastream names that starts with 'TRANSCRIPT'.
 *
 * @param AbstractObject $object
 *   The object to test, if NULL the given object doesn't exist or is
 *   inaccessible.
 *
 * @return bool
 *   TRUE if the user is allowed to access the transcript interface, FALSE
 *   otherwise.
 */
function islandora_transcript_edit_access($object) {
  $access = FALSE;
  if (is_object($object)) {

    foreach ($object as $ds => $value) {
      if (strpos($ds,'TRANSCRIPT') === 0) {
        $access = $access || islandora_datastream_access(ISLANDORA_METADATA_EDIT, $object[$ds]);
      }
    }
  }
  // Note: this is access to the tab. Individual DS edit access will be checked in
  // the form too.
  return $access;
}

/**
 * Implements hook_islandora_edit_datastream_registry().
 */
function islandora_transcript_islandora_edit_datastream_registry(AbstractObject $object, AbstractDatastream $datastream) {
  // We will have an unified DS edit form
  $routes = array();
  if (strpos($datastream->id,'TRANSCRIPT') === 0) {
    $routes[] = array(
      'name' => t('Edit TRANSCRIPT datastream'),
      'url' => "islandora/object/{$object->id}/TRANSCRIPT-edit",
    );
    return $routes;
  }
}
